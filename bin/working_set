#!/usr/bin/env ruby

# require 'bundler/setup' # DEV ONLY

require 'celluloid/current'
require 'celluloid/io'
require 'ncurses'

# $:.unshift File.join(File.dirname(__FILE__), "lib")

require 'constants'
require 'basic_actor'
require 'set_builder_adapter/ag'
require 'views/working_set_view'
require 'set_viewer_actor'
require 'set_builder_actor'
require 'user_input_actor'
require 'api_input_actor'
require 'working_set_item'
require 'working_set'

if ARGV.to_s =~ /--debug=(\d+)/
  require 'socket'
  $DEBUG_CONSOLE ||= TCPSocket.new 'localhost', $1.to_i
end

$SOCKET_PATH = ".working_set_socket"
if ARGV.to_s =~ /(?:--socket|-S)=([\/a-zA-Z0-9_.-]+)/
  $SOCKET_PATH = $1
end

class Object
  def debug_message(msg)
    $DEBUG_CONSOLE.puts msg if $DEBUG_CONSOLE
  end
end

class AppGroup < Celluloid::Supervision::Container
  supervise type: SetViewerActor,  as: :set_viewer
  supervise type: SetBuilderActor, as: :set_builder
  supervise type: ApiInputActor,   as: :api_input
  supervise type: UserInputActor,  as: :user_input

  # It seems exiting cleanly requires:
  #   - shutdown: to kill the supervised actors
  #   - terminate: to kill the supervisor itself
  def do_shutdown
    shutdown
    terminate
  end

end

$supervisor = AppGroup.run!
sleep 0.5 while $supervisor.alive?
